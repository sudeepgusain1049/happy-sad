{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2017-09-19T09:20:30.878Z",
    "end": "2017-09-19T09:20:31.089Z",
    "duration": 211,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Component: ManageOptions",
        "suites": [
          {
            "title": "Component: AddUpdateOption",
            "suites": [],
            "tests": [
              {
                "title": "should load",
                "fullTitle": "Component: ManageOptions Component: AddUpdateOption should load",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_React2.default.createElement(_ManageOptions2.default, null));\n(0, _expect2.default)(wrapper.length).toEqual(1);",
                "err": {},
                "isRoot": false,
                "uuid": "a8aff2cf-7d1a-4168-8c03-a7132385c42a",
                "parentUUID": "029795e6-43a6-4c05-9b43-f6ab7ea2e05f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\components\\ManageOptionsTest.js",
            "uuid": "029795e6-43a6-4c05-9b43-f6ab7ea2e05f",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "D:\\Projects\\happy-sad\\test\\components\\ManageOptionsTest.js",
            "passes": [
              {
                "title": "should load",
                "fullTitle": "Component: ManageOptions Component: AddUpdateOption should load",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.shallow)(_React2.default.createElement(_ManageOptions2.default, null));\n(0, _expect2.default)(wrapper.length).toEqual(1);",
                "err": {},
                "isRoot": false,
                "uuid": "a8aff2cf-7d1a-4168-8c03-a7132385c42a",
                "parentUUID": "029795e6-43a6-4c05-9b43-f6ab7ea2e05f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          }
        ],
        "tests": [
          {
            "title": "should load",
            "fullTitle": "Component: ManageOptions should load",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "d5f6cb67-d822-470b-9018-19e479da20e0",
            "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should load all options in grid",
            "fullTitle": "Component: ManageOptions should load all options in grid",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(wrapperManageOptions.state());\n(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "aec086d8-e5f3-4b1a-b7e9-6910805221ed",
            "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\components\\ManageOptionsTest.js",
        "uuid": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Component: ManageOptions \"before each\" hook",
            "timedOut": false,
            "duration": 15,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapperManageOptions = (0, _enzyme.mount)(_React2.default.createElement(_ManageOptions2.default, null));",
            "err": {},
            "isRoot": false,
            "uuid": "f2505c6b-479d-4d2a-a47a-09797c1efe94",
            "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "D:\\Projects\\happy-sad\\test\\components\\ManageOptionsTest.js",
        "passes": [
          {
            "title": "should load",
            "fullTitle": "Component: ManageOptions should load",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "d5f6cb67-d822-470b-9018-19e479da20e0",
            "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should load all options in grid",
            "fullTitle": "Component: ManageOptions should load all options in grid",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(wrapperManageOptions.state());\n(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "aec086d8-e5f3-4b1a-b7e9-6910805221ed",
            "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 7,
        "rootEmpty": false
      },
      {
        "title": "Component: OptionRows",
        "suites": [],
        "tests": [
          {
            "title": "should load",
            "fullTitle": "Component: OptionRows should load",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _expect2.default)(wrapper.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b9a694e2-4520-414f-aeb2-f2f3c83c4794",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display option column",
            "fullTitle": "Component: OptionRows should display option column",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ option: 'test option' });\nvar optionTd = wrapper.find('td').first();\n// Contains td for option\n(0, _expect2.default)(optionTd.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(optionTd.text()).toEqual('test option');",
            "err": {},
            "isRoot": false,
            "uuid": "82fc4b4c-b5ff-47a5-b8fc-d549c508ac3f",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display checkbox for isActive",
            "fullTitle": "Component: OptionRows should display checkbox for isActive",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains td for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "42ee28d9-043b-44eb-800d-2d95bd8067a7",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "isActive checkbox should be active if isActive is true",
            "fullTitle": "Component: OptionRows isActive checkbox should be active if isActive is true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(true);",
            "err": {},
            "isRoot": false,
            "uuid": "4d66006c-ca92-4257-8e7d-291a123dd2e5",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "isActive checkbox should be inactive if isActive is false",
            "fullTitle": "Component: OptionRows isActive checkbox should be inactive if isActive is false",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: false });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(false);",
            "err": {},
            "isRoot": false,
            "uuid": "cd506598-f069-4247-a53e-8cb51b7803c9",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display checkbox id as optionId",
            "fullTitle": "Component: OptionRows should display checkbox id as optionId",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ _id: 1234 });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().id).toEqual(1234);",
            "err": {},
            "isRoot": false,
            "uuid": "0652bcbf-41e2-4ecc-9352-a1ab4dc71cfd",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\components\\OptionRowsTest.js",
        "uuid": "858d282f-a4ad-496e-b6af-8e0882da92c2",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Component: OptionRows \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_OptionRows2.default, null));",
            "err": {},
            "isRoot": false,
            "uuid": "e3fea3c4-1fd2-420c-8cfe-b8856e1c1683",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "D:\\Projects\\happy-sad\\test\\components\\OptionRowsTest.js",
        "passes": [
          {
            "title": "should load",
            "fullTitle": "Component: OptionRows should load",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _expect2.default)(wrapper.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b9a694e2-4520-414f-aeb2-f2f3c83c4794",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display option column",
            "fullTitle": "Component: OptionRows should display option column",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ option: 'test option' });\nvar optionTd = wrapper.find('td').first();\n// Contains td for option\n(0, _expect2.default)(optionTd.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(optionTd.text()).toEqual('test option');",
            "err": {},
            "isRoot": false,
            "uuid": "82fc4b4c-b5ff-47a5-b8fc-d549c508ac3f",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display checkbox for isActive",
            "fullTitle": "Component: OptionRows should display checkbox for isActive",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains td for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);",
            "err": {},
            "isRoot": false,
            "uuid": "42ee28d9-043b-44eb-800d-2d95bd8067a7",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "isActive checkbox should be active if isActive is true",
            "fullTitle": "Component: OptionRows isActive checkbox should be active if isActive is true",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(true);",
            "err": {},
            "isRoot": false,
            "uuid": "4d66006c-ca92-4257-8e7d-291a123dd2e5",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "isActive checkbox should be inactive if isActive is false",
            "fullTitle": "Component: OptionRows isActive checkbox should be inactive if isActive is false",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ isActive: false });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(false);",
            "err": {},
            "isRoot": false,
            "uuid": "cd506598-f069-4247-a53e-8cb51b7803c9",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should display checkbox id as optionId",
            "fullTitle": "Component: OptionRows should display checkbox id as optionId",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "wrapper.setProps({ _id: 1234 });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().id).toEqual(1234);",
            "err": {},
            "isRoot": false,
            "uuid": "0652bcbf-41e2-4ecc-9352-a1ab4dc71cfd",
            "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "02bea906-aa3b-493f-b85a-d606dfcc2d16",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should load",
      "fullTitle": "Component: ManageOptions should load",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "d5f6cb67-d822-470b-9018-19e479da20e0",
      "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load all options in grid",
      "fullTitle": "Component: ManageOptions should load all options in grid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(wrapperManageOptions.state());\n(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "aec086d8-e5f3-4b1a-b7e9-6910805221ed",
      "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load",
      "fullTitle": "Component: AddUpdateOption should load",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_React2.default.createElement(_ManageOptions2.default, null));\n(0, _expect2.default)(wrapper.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "a8aff2cf-7d1a-4168-8c03-a7132385c42a",
      "parentUUID": "029795e6-43a6-4c05-9b43-f6ab7ea2e05f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load",
      "fullTitle": "Component: OptionRows should load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _expect2.default)(wrapper.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b9a694e2-4520-414f-aeb2-f2f3c83c4794",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display option column",
      "fullTitle": "Component: OptionRows should display option column",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ option: 'test option' });\nvar optionTd = wrapper.find('td').first();\n// Contains td for option\n(0, _expect2.default)(optionTd.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(optionTd.text()).toEqual('test option');",
      "err": {},
      "isRoot": false,
      "uuid": "82fc4b4c-b5ff-47a5-b8fc-d549c508ac3f",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display checkbox for isActive",
      "fullTitle": "Component: OptionRows should display checkbox for isActive",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains td for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "42ee28d9-043b-44eb-800d-2d95bd8067a7",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "isActive checkbox should be active if isActive is true",
      "fullTitle": "Component: OptionRows isActive checkbox should be active if isActive is true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4d66006c-ca92-4257-8e7d-291a123dd2e5",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "isActive checkbox should be inactive if isActive is false",
      "fullTitle": "Component: OptionRows isActive checkbox should be inactive if isActive is false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: false });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(false);",
      "err": {},
      "isRoot": false,
      "uuid": "cd506598-f069-4247-a53e-8cb51b7803c9",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display checkbox id as optionId",
      "fullTitle": "Component: OptionRows should display checkbox id as optionId",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ _id: 1234 });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().id).toEqual(1234);",
      "err": {},
      "isRoot": false,
      "uuid": "0652bcbf-41e2-4ecc-9352-a1ab4dc71cfd",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should load",
      "fullTitle": "Component: ManageOptions should load",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "d5f6cb67-d822-470b-9018-19e479da20e0",
      "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load all options in grid",
      "fullTitle": "Component: ManageOptions should load all options in grid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "console.log(wrapperManageOptions.state());\n(0, _expect2.default)(wrapperManageOptions.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "aec086d8-e5f3-4b1a-b7e9-6910805221ed",
      "parentUUID": "fcaa59d2-b519-45ae-8e05-4fd6853df986",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load",
      "fullTitle": "Component: AddUpdateOption should load",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.shallow)(_React2.default.createElement(_ManageOptions2.default, null));\n(0, _expect2.default)(wrapper.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "a8aff2cf-7d1a-4168-8c03-a7132385c42a",
      "parentUUID": "029795e6-43a6-4c05-9b43-f6ab7ea2e05f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should load",
      "fullTitle": "Component: OptionRows should load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _expect2.default)(wrapper.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b9a694e2-4520-414f-aeb2-f2f3c83c4794",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display option column",
      "fullTitle": "Component: OptionRows should display option column",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ option: 'test option' });\nvar optionTd = wrapper.find('td').first();\n// Contains td for option\n(0, _expect2.default)(optionTd.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(optionTd.text()).toEqual('test option');",
      "err": {},
      "isRoot": false,
      "uuid": "82fc4b4c-b5ff-47a5-b8fc-d549c508ac3f",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display checkbox for isActive",
      "fullTitle": "Component: OptionRows should display checkbox for isActive",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains td for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);",
      "err": {},
      "isRoot": false,
      "uuid": "42ee28d9-043b-44eb-800d-2d95bd8067a7",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "isActive checkbox should be active if isActive is true",
      "fullTitle": "Component: OptionRows isActive checkbox should be active if isActive is true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: true });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4d66006c-ca92-4257-8e7d-291a123dd2e5",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "isActive checkbox should be inactive if isActive is false",
      "fullTitle": "Component: OptionRows isActive checkbox should be inactive if isActive is false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ isActive: false });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().defaultChecked).toEqual(false);",
      "err": {},
      "isRoot": false,
      "uuid": "cd506598-f069-4247-a53e-8cb51b7803c9",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display checkbox id as optionId",
      "fullTitle": "Component: OptionRows should display checkbox id as optionId",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "wrapper.setProps({ _id: 1234 });\nvar isActive = wrapper.find({ type: 'checkbox' }).first();\n// Contains checkbox for isActive\n(0, _expect2.default)(isActive.length).toEqual(1);\n// Text for td is same as option passed\n(0, _expect2.default)(isActive.props().id).toEqual(1234);",
      "err": {},
      "isRoot": false,
      "uuid": "0652bcbf-41e2-4ecc-9352-a1ab4dc71cfd",
      "parentUUID": "858d282f-a4ad-496e-b6af-8e0882da92c2",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}